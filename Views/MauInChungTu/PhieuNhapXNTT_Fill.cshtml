﻿
@{ ViewBag.Title = "Phiếu Xác Nhận Thanh Toán"; }
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Phiếu Xác Nhận Thanh Toán</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            font-family: 'Times New Roman';
        }

        page {
            margin: 0;
        }

        body {
            display: flex;
            justify-content: center;
            /*  align-items: center;*/
            min-height: 100vh;
            margin: 0;
        }

        form {
            text-align: center;
            padding: 20px;
            border: 0px solid #ccc;
            border: none;
        }

        .flex-container {
            text-align: left;
        }

        a:hover {
            background-color: lightskyblue;
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            justify-content:;
            width: 50%;
            height: 300px;
        }

        .submit {
            /*height: 50px;
        width: 100px;*/
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: fixed;
            height: 100%;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        h5 {
            text-align: center;
            font-size: 15px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .expandable-icon {
            cursor: pointer;
        }

            .expandable-icon.collapsed {
                transform: rotate(0deg);
            }

            .expandable-icon.expanded {
                transform: rotate(180deg);
            }

        .material-symbols-outlined {
            cursor: pointer;
        }
        /* Style for the container of the forms */
        .forms-container {
            display: flex;
        }

        /* Style for the locBC form */
        .locBC-form {
            width: 300px; /* Adjust width as needed */
            margin-right: 20px; /* Add space between forms */
        }

        /* Style for the data form */
        .data-form {
            flex: 1; /* Take up remaining space */
        }

        .print-button {
            margin-top: 10px;
        }

        @@media print {
            #locBC {
                display: none;
            }

            #data-form {
                justify-content: center;
                /*  align-items: center;*/
                min-height: 100vh;
                margin: 0; /* Canh giữa nội dung trong data-form */
            }

            h5 {
                text-align: center;
                font-size: 15px;
            }

            #data-form .print-button {
                display: none;
            }
        }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }
    </style>
</head>
<body>
    @*<div class="tab-control" style="position:fixed;bottom:0">
            <ul class="tabs" style="background-color: #1d1b31; bottom: 0; left: 0; right: 0;">
                <li class="tab selected"><a href="/Home/About" style="padding-right:5px">Home</a></li>

            </ul>
        </div>*@

    <div class="forms-container">
        <ul class="nav-links" style="display: flex; justify-content: center;">
            <li>
                <form class="locBC-form" id="dateForm" action="PhieuNhapXNTT" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">

                        <a>Từ Ngày</a><br /><br />

                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.QueryString["From_date"]" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.QueryString["To_date"]" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                        <input type="text" id="dropdownInput" list="dropdownList" placeholder="Tìm kiếm danh mục">
                        <datalist id="dropdownList">
                            @foreach (var item in ViewBag.DataItems)
                            {
                                <option value="@item.Ma_Dt" data-ten="@item.Ten_Dt" data-diachi="@item.Dia_Chi" data-dvcs="@item.Dvcs">@item.Ten_Dt</option>
                            }
                        </datalist>
                        <input type="hidden" name="Ma_Dt" id="selectedOption">


                        <div>
                            <button class="submit" type="submit" id="runReportButton" onclick="runReport()"> Chạy Báo Cáo </button>
                        </div>
                    </div>
                </form>
            </li>
        </ul>


        <form class="data-form" id="data-form">
            <div>
                <h3 style="margin-left:-500px; font-size:13px;">CÔNG TY CỔ PHẦN DƯỢC PHẨM OPC</h3>
                <h3 style="font-weight:bold;color:black; font-size:13px;margin-left:-500px">CHI NHÁNH ĐÀ NẴNG</h3>
            </div>

            <br />

            <div>
                <h3 style="font-size: 25px; color: black; font-weight: bold">XÁC NHẬN THANH TOÁN</h3>
                <br />
            </div>
            <div style="text-align:left;margin-left:30px">
                <h5>-Căn cứ Luật thương mại số 36/2005/QH11 ngày 14/06/2005;</h5>
                <h5>-Căn cứ vào hợp đồng số: ...../thỏa thuận của đôi bên.</h5>
            </div>
            <br />
            <div class="flex-container">
                <h5 style="display: inline-block;color:black;font-weight:bold">Khách hàng: <span style="font-size: 15px;">NHÀ THUỐC HẢI PHÒNG</span></h5>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <h5 style="display: inline-block; color: black; font-weight: bold">NV_01580</h5>
            </div>
            <div style="text-align: left; color: black; font-weight: bold">
                <h5>Địa Chỉ: 1017 Hồng Bàng, phường 12, Quận 6, Tp.HCM </h5>
            </div>
            <br />
            <div style="text-align:left;color:black;font-weight:bold">
                <h5>Điều kiện thanh toán: </h5>
            </div>

            <div style="text-align:left">
                <h5 style="font-size: 13px">Khi thanh toán ngay, Quý khách hàng được chiết khấu 2% trên giá trị thanh toán của những hóa đơn cụ thể như sau: </h5>
            </div><br />
            <div>
                <table border="1" border-collapse="collapse">
                    <tr style="font-size:10px;font-weight:bold;color:black">
                        <th style="padding:10px">SỐ</th>
                        <th>NGÀY HĐ</th>
                        <th>NGÀY THU</th>
                        <th>TIỀN HĐ</th>

                        <th>CKTT</th>
                        <th>TIỀN THANH TOÁN</th>
                    </tr>
                    <tbody>
                        <tr>
                            <td style="padding:30px"></td>
                            <td style="padding:35px"></td>
                            <td style="padding:35px"></td>

                            <td style="padding:30px"></td>
                            <td style="padding:30px"></td>
                            <td>&nbsp;&nbsp;</td>
                        </tr>
                        <tr style="color:black;font-weight:bold">
                            <td>&nbsp;&nbsp;</td>
                            <td colspan="2">Tổng cộng: </td>

                            <td>&nbsp;&nbsp;</td>

                            <td>&nbsp;&nbsp;</td>
                            <td>&nbsp;&nbsp;</td>
                        </tr>
                    </tbody>

                </table>
                <br />
                <div style="text-align:left">
                    <h5 style="word-wrap: break-word;font-size:15px">Khách hàng đã thanh toán số tiền;...................., nhận chiết khấu thanh toán số tiền:..................., nhận code <br />khuyến mãi số tiền:......... </h5>
                </div><br />
                <div style="text-align:right">
                    <h4>Đà Nẵng, ngày&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tháng&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;năm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h4>
                </div>
                @*<h4 style="margin-left:auto">P. KHCU &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thủ kho&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Xưởng sản xuất</h4>*@
                <div style="display:inline-block">
                    <h4 style="display:inline-block">Khách Hàng</h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <h4 style="display:inline-block">Nhân viên thu tiền </h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <h4 style="display:inline-block">Người lập bảng</h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                </div><br />
                <div>
                    <h5 style="font-style:italic;text-align:left;margin-left:40px">(Ký, ghi họ tên)</h5>
                </div>
            </div>

        </form>
    </div>

    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
    <script>
        // Lấy giá trị từ các trường input
        var fromDate = document.getElementById("tu_ngay").value;
        var toDate = document.getElementById("den_ngay").value;

        // Đặt Cookies với giá trị từ người dùng
        document.cookie = "From_date=" + fromDate;
        document.cookie = "To_date=" + toDate;
    </script>
    <script>
        document.getElementById("dropdownInput").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.text.toString();
                        var selectedDiaChi = selectedOption.getAttribute('data-diachi');
                        var selectedDvcs = selectedOption.getAttribute('data-Dvcs');
                        document.cookie = `Ten_Dt=${encodeURIComponent(tenDt)}; expires=Thu, 01 Jan 2099 00:00:00 UTC; path=/;`;
                        document.cookie = 'Dia_Chi=' + selectedDiaChi;
                        document.cookie = 'Dvcs=' + selectedDvcs;
                    }
                });
            }
        });


    </script>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault(); // Ngăn mặc định nộp biểu mẫu

            // Lấy giá trị từ các trường input
            var fromDate = document.getElementById("tu_ngay").value;
            var toDate = document.getElementById("den_ngay").value;

            // Định dạng và lưu giá trị vào Cookie
            setFormattedCookie("From_date", fromDate);
            setFormattedCookie("To_date", toDate);

            // Gửi biểu mẫu sau khi đã lưu Cookie
            event.target.submit();
        }

        function setFormattedCookie(cookieName, dateString) {
            var date = new Date(dateString);
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
            var formattedDate = day + "/" + month + "/" + year;
            document.cookie = cookieName + "=" + formattedDate;
        }
    </script>



    <script>
        // Hàm kiểm tra và chuyển hướng về trang Home nếu mảng tabsArray rỗng
        function checkAndRedirectToHome() {
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];

            // Kiểm tra nếu không còn tab nào, chuyển về trang Home
            if (tabsArray.length === 0) {
                window.location.href = "/Home/About"; // Sử dụng đường dẫn tương đối dựa trên ngữ cảnh
            }
        }

        // Hàm để tạo lại giao diện tab từ mảng đã lưu trong Local Storage
        function createTabsFromLocalStorage() {
            const tabControlTabs = document.querySelector(".tab-control .tabs");
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];
            const currentHref = window.location.href; // Lấy đường dẫn hiện tại

            // Xóa toàn bộ các tab hiện có trong giao diện
            tabControlTabs.innerHTML = "";

            // Lặp qua từng tab và thêm vào giao diện
            tabsArray.forEach(function (tabInfo, index) {
                const tabTitle = tabInfo.title;
                const tabHref = tabInfo.href;

                // Tạo tab và thêm vào giao diện
                const newTab = document.createElement("li");
                newTab.classList.add("tab", "selected");

                // Kiểm tra nếu tabHref trùng với đường dẫn hiện tại, thêm lớp active
                if (tabHref === currentHref) {
                    newTab.classList.add("active");
                }

                newTab.innerHTML = `
                                                    <a href="${tabHref}">${tabTitle}</a>
                                                    <a class="closeTab" href="">✕</a>
                                                `;
                tabControlTabs.appendChild(newTab);

                // Sự kiện khi người dùng nhấp vào nút đóng tab
                newTab.querySelector(".closeTab").addEventListener("click", function (event) {
                    event.preventDefault();
                    closeTabAndNavigate(tabTitle, index);
                });
            });
        }



        document.addEventListener("DOMContentLoaded", function () {
            const tabControlTabs = document.querySelector(".tab-control .tabs");

            // Lấy trạng thái hiện tại của view từ Local Storage
            const currentView = localStorage.getItem("currentView");

            // Lấy mảng tabsArray từ Local Storage
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];

            // Lặp qua từng phần tử trong tabsArray để tạo tab
            tabsArray.forEach(function (tabInfo, index) {
                const tabTitle = tabInfo.title;
                const tabHref = tabInfo.href;

                // Tạo tab và thêm vào giao diện
                const newTab = document.createElement("li");
                newTab.classList.add("tab", "selected");
                newTab.innerHTML = `
                                                        <a href="${tabHref}">${tabTitle}</a>
                                                        <a class="closeTab" href="">✕</a>
                                                    `;
                tabControlTabs.appendChild(newTab);

                // Sự kiện khi người dùng nhấp vào nút đóng tab
                newTab.querySelector(".closeTab").addEventListener("click", function (event) {
                    event.preventDefault();
                    closeTabAndNavigate(tabTitle, index);
                });
            });

            hideLoader();
            checkAndRedirectToHome(); // Gọi hàm kiểm tra và chuyển hướng
        });

        // Hàm để xóa tab và chuyển đến view gần nhất (nếu có)
        // Hàm để xóa tab và cập nhật giao diện
        function closeTabAndNavigate(tabTitle, tabIndex) {
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];

            // Lọc ra tab cần đóng dựa trên chỉ số tabIndex và cập nhật lại tabsArray
            if (tabIndex >= 0 && tabIndex < tabsArray.length) {
                tabsArray.splice(tabIndex, 1);
                localStorage.setItem("tabsArray", JSON.stringify(tabsArray));
            }

            // Xóa tab khỏi giao diện và cập nhật lại thanh tab
            const tabControlTabs = document.querySelector(".tab-control .tabs");

            // Lặp qua danh sách tab để tìm tab cần xóa
            for (let i = 0; i < tabControlTabs.children.length; i++) {
                const tab = tabControlTabs.children[i];
                if (tab.querySelector("a").textContent === tabTitle) {
                    tab.remove();
                    break;
                }
            }

            // Gọi lại hàm để tạo lại giao diện tab từ mảng đã được cập nhật
            createTabsFromLocalStorage();

            // Kiểm tra nếu không còn tab nào, chuyển về trang Home
            checkAndRedirectToHome();
            window.location.reload();
        }

    </script>
    @*<script>
            // Trong view 2
            document.addEventListener("DOMContentLoaded", function () {
                // Lấy đường dẫn hiện tại của tab trong view 2
                const currentTabHref = window.location.href;

                // Lấy nút hoặc sự kiện mà bạn sử dụng để chuyển sang tab khác trong view 3
                const switchToView3Button = document.querySelector("#switchToView3Button");

                // Sự kiện khi bạn chuyển sang tab khác trong view 3
                switchToView3Button.addEventListener("click", function () {
                    // Đường dẫn của tab trong view 3
                    const newTabHref = "ĐƯỜNG_DẪN_CỦA_TAB_VIEW_3"; // Thay thế bằng đường dẫn thật

                    // Cập nhật đường dẫn của tab trong view 2
                    window.location.href = newTabHref;
                });

                // Log đường dẫn hiện tại của tab trong view 2
                console.log(currentTabHref);
            });

        </script>*@
    <script>
        // Sự kiện khi người dùng nhấp vào tab
        document.addEventListener("click", function (event) {
            const clickedTab = event.target.closest(".tab");
            if (clickedTab) {
                // Xóa lớp active từ tất cả các tab
                const tabs = document.querySelectorAll(".tab");
                tabs.forEach(function (tab) {
                    tab.classList.remove("active");
                });

                // Thêm lớp active cho tab được nhấp vào
                clickedTab.classList.add("active");
            }
        });

    </script>
    <script>
        // Bổ sung một lớp chung cho tất cả các tab của View 2 để dễ dàng quản lý chúng
        const tabsInView2 = document.querySelectorAll(".tab-control.tab-view-2 .tab");

        // Xóa lớp active từ tất cả các tab
        tabsInView2.forEach(function (tab) {
            tab.classList.remove("active");
        });

        // Sự kiện khi tab được click
        document.addEventListener("click", function (event) {
            const clickedTab = event.target.closest(".tab-view-2");
            if (clickedTab) {
                // Xóa lớp active từ tất cả các tab trong View 2
                tabsInView2.forEach(function (tab) {
                    tab.classList.remove("active");
                });

                // Thêm lớp active cho tab được nhấp vào
                clickedTab.classList.add("active");
            }
        });

        // ...
    </script>
    <script>
        // Set the "Từ Ngày" input to the first day of the current month
        function setFirstDayOfCurrentMonth() {
            const currentDate = new Date();
            const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            const formattedDate = formatDate(firstDayOfMonth);

            document.getElementById("tu_ngay").value = formattedDate;
        }
        function setCurrentDate() {
            const currentDate = new Date();
            const formattedToDate = formatDate(currentDate);
            document.getElementById("den_ngay").value = formattedToDate;
        }
        // Format the date as "yyyy-mm-dd" for input type="date"
        function formatDate(date) {
            const year = date.getFullYear();
            const month = (date.getMonth() + 1).toString().padStart(2, "0");
            const day = date.getDate().toString().padStart(2, "0");
            return `${year}-${month}-${day}`;
        }

        // Call the function to set the "Từ Ngày" input on page load
        setFirstDayOfCurrentMonth();
        setCurrentDate();</script>
    <script>

</body >

</html >

